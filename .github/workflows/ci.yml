# name: Pipeline with Build and Jest Test in 2 Jobs

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-22.04
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2
#       - name: Install dependencies
#         run: npm install
#       - name: Save node_modules and build folder as artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: build-artifacts
#           path: |
#             node_modules
#             .next # Falls du Next.js nutzt, andernfalls den entsprechenden Build-Ordner angeben

#   tests:
#     runs-on: ubuntu-22.04
#     needs: build # Test-Job wartet, bis der Build-Job erfolgreich ist
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2
#       - name: Install dependencies
#         run: npm install
#       - name: Run test
#         run: npm test

name: Pipeline with Jest Test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Save node_modules and build
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            node_modules
            .next # Falls du Next.js nutzt, andernfalls den entsprechenden Build-Ordner angeben

  tests:
    strategy:
      matrix:
        shard: [1, 2] # Hier wird der Test in zwei Shards aufgeteilt
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Retrieve build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Run Jest Tests in Shard ${{ matrix.shard }}
        env:
          JEST_SHARD_INDEX: ${{ matrix.shard }}
          JEST_TOTAL_SHARDS: 2
        run: |
          # Jest Tests in zwei Shards aufteilen und jeweils ausf√ºhren
          jest --shardIndex=$JEST_SHARD_INDEX --shardTotal=$JEST_TOTAL_SHARDS
